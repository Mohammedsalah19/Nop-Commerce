@model VendorModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-vendor-page");

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var vendorUrl = Url.RouteUrl("Vendor", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(vendorUrl);
    }
}
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
<div class="page vendor-page">
    <div class="page-title panel-heading">
        <h1>@Model.Name</h1>
    </div>
    <div class="page-body">
        @Html.Widget("vendordetails_top", Model.Id)
        @*description*@
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="vendor-description">
                @Html.Raw(Model.Description)
            </div>
        }
	    @*contact vendor*@
        @if (Model.AllowCustomersToContactVendors)
        {
            <div class="contact-vendor">
                <input type="button" value="@T("ContactVendor")" class="btn btn-primary contact-vendor-button" onclick="setLocation('@Url.RouteUrl("ContactVendor", new { vendorId = Model.Id })')" />
            </div>
        }	 
        @if (Model.Products.Count > 0)
	    {
        	<div class="row">
	            <div class="col-md-12">
        	    	<div class="contact-vendor">
                		@Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
		            </div>
        	    </div>
	        </div>
	    }
        @*product grid and list*@
        @if (Model.Products.Count > 0)
        {
	        <div class="product-grid clearfix">
                <div class="row">
                    @foreach (var product in Model.Products)
                    {
                        <div class="item-box @(Model.PagingFilteringContext.ViewMode == "list" ? "product-list col-xs-12 col-sm-12 col-md-12 product-align" : "product-grid col-xs-12 col-sm-4 col-md-4 product-align")">
                            <div class="thumbnail">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
	    @{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
        }
        @if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }
        @Html.Widget("vendordetails_bottom", Model.Id)
    </div>
</div>
