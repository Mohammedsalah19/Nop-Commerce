@model EditForumTopicModel
@using Nop.Core.Domain.Forums;
@using Nop.Web.Models.Boards;
@{
    //page class
    Html.AppendPageCssClassParts("html-forum-edit-page");
}

@Html.Action("ForumBreadcrumb", new { forumId = Model.ForumId, forumTopicId = Model.Id })
<div class="page forum-edit-page">
    <div class="page-title panel-heading">
        @if (Model.IsEdit)
        {
            <h1>@T("Forum.EditTopic")</h1>
        }
        else
        {
            <h1>@T("Forum.NewTopic")</h1>
        }
    </div>
    <div class="page-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            var validationSummary = Html.ValidationSummary(true);
            if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
            {
                <div class="message-error">@validationSummary</div> 
            }
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ForumId)
            <div class="form-horizontal"> 
                <fieldset>
                    <div class="form-group">
                        <label class="forum-subject-title control-label col-xs-2 col-sm-4 col-md-4">@T("Forum.ForumName"):</label>
                        <div class="col-xs-10 col-sm-5 col-md-5">
                            <strong class="forum-subject-name">@Model.ForumName</strong>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-4 col-md-4">@T("Forum.TopicTitle"):</label>
                        <div class="col-sm-5 col-md-5">
                             @Html.TextBoxFor(model => model.Subject, new { @class = "forum-topic-title-text form-control" })
                             @Html.ValidationMessageFor(model => model.Subject)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-4 col-md-offset-4 col-sm-5 col-md-5">
                            @if (Model.ForumEditor == EditorType.BBCodeEditor)
                            {
                                @Html.BBCodeEditor("Text")
                            }
                            @Html.TextAreaFor(model => model.Text, new { @class = "forum-post-text form-control", TextMode = "MultiLine" })
                            @Html.ValidationMessageFor(model => model.Text)
                        </div>
                   </div>
                   @if (Model.IsCustomerAllowedToSetTopicPriority)
                   {
                        <div class="form-group">
                            <label class="control-label col-sm-4 col-md-4">@T("Forum.Priority"):</label>
                            <div class="col-sm-5 col-md-5">
                                @Html.DropDownList("TopicTypeId", new SelectList(Model.TopicPriorities, "Value", "Text", Model.TopicTypeId), new { @class="form-control"})     
                           </div>
                        </div>
                   }
                   @if (Model.IsCustomerAllowedToSubscribe)
                   {
                        <div class="form-group">
                            <label class="control-label col-sm-4 col-md-4">@T("Options"):</label>
                            <div class="col-sm-8 col-md-5">
                                <label class="checkbox">
                                    @Html.EditorFor(model => model.Subscribed)
                                    <span>@T("Forum.NotifyWhenSomeonePostsInThisTopic")</span>    
                                </label>
                           </div>
                        </div>
                   }
                    <div class="form-group">
                        <div class="col-sm-offset-4 col-md-offset-4 col-sm-8 col-md-8">
                            <input type="submit" value="@T("Forum.Submit")" class="btn btn-primary submit-topic-button" />
                            <input type="button" class="btn btn-default cancel-topic-button" value="@T("Forum.Cancel")" onclick="setLocation('@Url.RouteUrl("ForumSlug", new { id = Model.ForumId, slug = Model.ForumSeName })    ')" />
                        </div>
                    </div>
            </fieldset>
        </div>
       }
    </div>
</div>
