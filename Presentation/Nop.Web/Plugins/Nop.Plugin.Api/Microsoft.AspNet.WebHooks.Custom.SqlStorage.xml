<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.WebHooks.Custom.SqlStorage</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.WebHooks.DataSecurity">
            <summary>
            Provides utility functions for the Data Protection functionality in ASP.NET Core 1.0
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DataSecurity.GetDataProtector">
            <summary>
            This follows the same initialization that is provided when <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionProvider"/>
            is initialized within ASP.NET Core 1.0 Dependency Injection.
            </summary>
            <returns>A fully initialized <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionProvider"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNet.WebHooks.Properties.SqlStorageResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Properties.SqlStorageResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Properties.SqlStorageResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Properties.SqlStorageResources.SqlStore_BadWebHook">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; could not be retrieved from the SQL store: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Properties.SqlStorageResources.SqlStore_ConcurrencyError">
            <summary>
              Looks up a localized string similar to Concurrency failure during &apos;{0}&apos; operation: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Properties.SqlStorageResources.SqlStore_NoConnectionString">
            <summary>
              Looks up a localized string similar to Please provide a SQL connection string with name &apos;{0}&apos; in the configuration string section of the &apos;Web.Config&apos; file..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Properties.SqlStorageResources.SqlStore_OperationFailed">
            <summary>
              Looks up a localized string similar to General error during &apos;{0}&apos; operation: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Properties.SqlStorageResources.SqlStore_SqlOperationFailed">
            <summary>
              Looks up a localized string similar to Operation &apos;{0}&apos; failed with error: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.WebHooks.Storage.IRegistration">
            <summary>
            Defines a the WebHook registration data model for rows stored in a SQL DB.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Storage.IRegistration.User">
            <summary>
            Gets or sets the user ID for this WebHook registration.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Storage.IRegistration.Id">
            <summary>
            Gets or sets the ID of this WebHook registration.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Storage.IRegistration.ProtectedData">
            <summary>
            Gets or sets the data included in this WebHook registration. Note that this is encrypted 
            as it contains sensitive information.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.WebHooks.Storage.Registration">
            <summary>
            Defines the WebHook registration data model for rows stored in Microsoft SQL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Storage.Registration.User">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Storage.Registration.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Storage.Registration.ProtectedData">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.Storage.Registration.RowVer">
            <summary>
            Gets or sets a unique row version.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.WebHooks.DbWebHookStore`2">
            <summary>
            Provides an abstract implementation of <see cref="T:Microsoft.AspNet.WebHooks.IWebHookStore"/> targeting SQL using a parameterized <see cref="T:System.Data.Entity.DbContext"/>.
            The <see cref="T:System.Data.Entity.DbContext"/> must contain an entity of type <see cref="T:Microsoft.AspNet.WebHooks.Storage.IRegistration"/> as this is used to access the data
            in the DB.
            </summary>
            <typeparam name="TContext">The type of <see cref="T:System.Data.Entity.DbContext"/> to be used.</typeparam>
            <typeparam name="TRegistration">The type of <see cref="T:Microsoft.AspNet.WebHooks.Storage.IRegistration"/> to be used.</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.#ctor(Microsoft.AspNet.WebHooks.Diagnostics.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.WebHooks.DbWebHookStore`2"/> class with the given <paramref name="logger"/>.
            Using this constructor, the data will not be encrypted while persisted to the database.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.#ctor(Microsoft.AspNetCore.DataProtection.IDataProtector,Microsoft.AspNet.WebHooks.Diagnostics.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.WebHooks.DbWebHookStore`2"/> class with the given <paramref name="protector"/>
            and <paramref name="logger"/>. 
            Using this constructor, the data will be encrypted using the provided <paramref name="protector"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.GetAllWebHooksAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.QueryWebHooksAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Func{Microsoft.AspNet.WebHooks.WebHook,System.String,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.LookupWebHookAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.InsertWebHookAsync(System.String,Microsoft.AspNet.WebHooks.WebHook)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.UpdateWebHookAsync(System.String,Microsoft.AspNet.WebHooks.WebHook)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.DeleteWebHookAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.DeleteAllWebHooksAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.QueryWebHooksAcrossAllUsersAsync(System.Collections.Generic.IEnumerable{System.String},System.Func{Microsoft.AspNet.WebHooks.WebHook,System.String,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.ConvertToWebHook(`1)">
            <summary>
            Converts the provided <paramref name="registration"/> to a <see cref="T:Microsoft.AspNet.WebHooks.WebHook"/> instance
            which is returned from this <see cref="T:Microsoft.AspNet.WebHooks.IWebHookStore"/> implementation.
            </summary>
            <param name="registration">The instance to convert.</param>
            <returns>An initialized <see cref="T:Microsoft.AspNet.WebHooks.WebHook"/> instance.</returns>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.ConvertFromWebHook(System.String,Microsoft.AspNet.WebHooks.WebHook)">
            <summary>
            Converts the provided <paramref name="webHook"/> associated with the given
            <paramref name="user"/> to an <typeparamref name="TRegistration"/> instance
            which is used by this <see cref="T:Microsoft.AspNet.WebHooks.IWebHookStore"/> implementation.
            </summary>
            <param name="user">The user associated with this <see cref="T:Microsoft.AspNet.WebHooks.WebHook"/>.</param>
            <param name="webHook">The <see cref="T:Microsoft.AspNet.WebHooks.WebHook"/> to convert.</param>
            <returns>An initialized <typeparamref name="TRegistration"/> instance.</returns>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.DbWebHookStore`2.UpdateRegistrationFromWebHook(System.String,Microsoft.AspNet.WebHooks.WebHook,`1)">
            <summary>
            Updates an existing <typeparamref name="TRegistration"/> instance with data provided
            by the given <paramref name="webHook"/>.
            </summary>
            <param name="user">The user associated with this <see cref="T:Microsoft.AspNet.WebHooks.WebHook"/>.</param>
            <param name="webHook">The <paramref name="webHook"/> to update the existing <paramref name="registration"/> with.</param>
            <param name="registration">The <typeparamref name="TRegistration"/> instance to update.</param>
        </member>
        <member name="T:Microsoft.AspNet.WebHooks.WebHookStoreContext">
            <summary>
            Defines a <see cref="T:System.Data.Entity.DbContext"/> which contains the set of WebHook <see cref="T:Microsoft.AspNet.WebHooks.Storage.Registration"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.WebHookStoreContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.WebHooks.WebHookStoreContext"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.WebHooks.WebHookStoreContext.Registrations">
            <summary>
            Gets or sets the current collection of <see cref="T:Microsoft.AspNet.WebHooks.Storage.Registration"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.WebHookStoreContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNet.WebHooks.SqlWebHookStore">
            <summary>
            Provides an implementation of <see cref="T:Microsoft.AspNet.WebHooks.IWebHookStore"/> storing registered WebHooks in Microsoft SQL Server.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.SqlWebHookStore.#ctor(Microsoft.AspNet.WebHooks.Config.SettingsDictionary,Microsoft.AspNet.WebHooks.Diagnostics.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.WebHooks.SqlWebHookStore"/> class with the given <paramref name="settings"/>
            and <paramref name="logger"/>. 
            Using this constructor, the data will not be encrypted while persisted to the database.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.SqlWebHookStore.#ctor(Microsoft.AspNet.WebHooks.Config.SettingsDictionary,Microsoft.AspNetCore.DataProtection.IDataProtector,Microsoft.AspNet.WebHooks.Diagnostics.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.WebHooks.SqlWebHookStore"/> class with the given <paramref name="settings"/>,
            <paramref name="protector"/>, and <paramref name="logger"/>. 
            Using this constructor, the data will be encrypted using the provided <paramref name="protector"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.SqlWebHookStore.CreateStore(Microsoft.AspNet.WebHooks.Diagnostics.ILogger)">
            <summary>
            Provides a static method for creating a standalone <see cref="T:Microsoft.AspNet.WebHooks.SqlWebHookStore"/> instance which will
            encrypt the data to be stored using <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtector"/>.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.AspNet.WebHooks.Diagnostics.ILogger"/> instance to use.</param>
            <returns>An initialized <see cref="T:Microsoft.AspNet.WebHooks.SqlWebHookStore"/> instance.</returns>
        </member>
        <member name="M:Microsoft.AspNet.WebHooks.SqlWebHookStore.CreateStore(Microsoft.AspNet.WebHooks.Diagnostics.ILogger,System.Boolean)">
            <summary>
            Provides a static method for creating a standalone <see cref="T:Microsoft.AspNet.WebHooks.SqlWebHookStore"/> instance.
            </summary>
            <param name="logger">The <see cref="T:Microsoft.AspNet.WebHooks.Diagnostics.ILogger"/> instance to use.</param>
            <param name="encryptData">Indicates whether the data should be encrypted using <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtector"/> while persisted.</param>
            <returns>An initialized <see cref="T:Microsoft.AspNet.WebHooks.SqlWebHookStore"/> instance.</returns>
        </member>
        <member name="T:System.Web.Http.HttpConfigurationExtensions">
            <summary>
            Extension methods for <see cref="T:System.Web.Http.HttpConfiguration"/>.
            </summary>
        </member>
        <member name="M:System.Web.Http.HttpConfigurationExtensions.InitializeCustomWebHooksSqlStorage(System.Web.Http.HttpConfiguration)">
            <summary>
            Configures a Microsoft SQL Server Storage implementation of <see cref="T:Microsoft.AspNet.WebHooks.IWebHookStore"/>
            which provides a persistent store for registered WebHooks used by the custom WebHooks module.
            Using this initializer, the data will be encrypted using <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtector"/>.
            </summary>
            <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration"/>config.</param>
        </member>
        <member name="M:System.Web.Http.HttpConfigurationExtensions.InitializeCustomWebHooksSqlStorage(System.Web.Http.HttpConfiguration,System.Boolean)">
            <summary>
            Configures a Microsoft SQL Server Storage implementation of <see cref="T:Microsoft.AspNet.WebHooks.IWebHookStore"/>
            which provides a persistent store for registered WebHooks used by the custom WebHooks module.
            </summary>
            <param name="config">The current <see cref="T:System.Web.Http.HttpConfiguration"/>config.</param>
            <param name="encryptData">Indicates whether the data should be encrypted using <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtector"/> while persisted.</param>
        </member>
    </members>
</doc>
